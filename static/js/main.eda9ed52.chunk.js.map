{"version":3,"sources":["components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Notification/Notification.js","App.jsx","index.js","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["Section","title","children","FeedbackOptions","options","onAddfeedback","map","option","className","s","button","type","name","onClick","Statistics","good","neutral","bad","total","positivePercentage","Notification","message","App","useState","setGood","setNeutral","setBad","countTotalFeedback","e","target","prevState","Math","round","ReactDOM","render","document","querySelector","module","exports"],"mappings":"kOAeeA,EAZC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,qCACE,6BAAKD,IACL,8BAAMC,Q,gBCaGC,EAjBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,cAAZ,OACtB,6BACGD,EAAQE,KAAI,SAAAC,GAAM,OACjB,6BACE,wBACEC,UAAWC,IAAEC,OACbC,KAAK,SACLC,KAAML,EACNM,QAASR,EAJX,SAMGE,KAPIA,SCiBAO,EApBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,gCACE,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,YCGSC,EAVM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OACE,mCACE,4BAAIA,OCAK,SAASC,IAAO,IAAD,EACJC,mBAAS,GADL,mBACrBR,EADqB,KACfS,EADe,OAEED,mBAAS,GAFX,mBAErBP,EAFqB,KAEZS,EAFY,OAGNF,mBAAS,GAHH,mBAGrBN,EAHqB,KAGhBS,EAHgB,KAsBtBC,EAAqB,WACzB,OAAOZ,EAAOC,EAAUC,GAO1B,OACI,qCACE,cAAC,EAAD,CAAShB,MAAM,2BAAf,SACE,cAAC,EAAD,CACEG,QAAS,CAAC,OAAQ,UAAW,OAC7BC,cA7BU,SAAAuB,GAClB,OAAQA,EAAEC,OAAOjB,MACf,IAAK,OACHY,GAAQ,SAAAM,GAAS,OAAIA,EAAY,KACjC,MACF,IAAK,UACHL,GAAW,SAAAK,GAAS,OAAIA,EAAY,KACpC,MACF,IAAK,MACHJ,GAAO,SAAAI,GAAS,OAAIA,EAAY,KAChC,MACF,QACE,aAoBA,cAAC,EAAD,CAAS7B,MAAM,aAAf,SACC0B,IACC,cAAC,EAAD,CACIZ,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOS,IACPR,mBAlBJY,KAAKC,MAAOjB,EAAOY,IAAwB,OAsBzC,cAAC,EAAD,CAAcN,QAAQ,2BClDlCY,IAASC,OAAO,cAACZ,EAAD,IAASa,SAASC,cAAc,W,kBCJhDC,EAAOC,QAAU,CAAC,OAAS,mC","file":"static/js/main.eda9ed52.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Section = ({ title, children }) => {\n  return (\n    <>\n      <h2>{title}</h2>\n      <div>{children}</div>\n    </>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n};\nexport default Section;\n","import React from 'react';\nimport s from './FeedbackOptions.module.css';\n\nconst FeedbackOptions = ({ options, onAddfeedback }) => (\n  <ul>\n    {options.map(option => (\n      <li key={option}>\n        <button\n          className={s.button}\n          type=\"button\"\n          name={option}\n          onClick={onAddfeedback}\n        >\n          {option}\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n\nexport default FeedbackOptions;\n","// import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <div>\n      <p>Good: {good}</p>\n      <p>Neutral: {neutral}</p>\n      <p>Bad: {bad}</p>\n      <p>Total: {total}</p>\n      <p>Positive feedback: {positivePercentage} %</p>\n    </div>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => {\n  return (\n    <>\n      <p>{message}</p>\n    </>\n  );\n};\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\nexport default Notification;\n","import { useState } from 'react';\nimport Section from './components/Section/Section';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions.js';\nimport Statistics from './components/Statistics/Statistics';\nimport Notification from './components/Notification/Notification';\n\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  \n  \n  const addFeedback = e => {\n    switch (e.target.name) {\n      case 'good':\n        setGood(prevState => prevState + 1);\n        break;\n      case 'neutral':\n        setNeutral(prevState => prevState + 1);\n        break;\n      case 'bad':\n        setBad(prevState => prevState + 1);\n        break;\n      default:\n        return;\n    }\n  }\n\n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  }\n\n  const countPositiveFeedbackPercentage = () => {\n   return Math.round((good / countTotalFeedback()) * 100);\n  }\n  \n  return (\n      <>\n        <Section title=\"Gib ihm, Bratan, gib ihm\">\n          <FeedbackOptions\n            options={['good', 'neutral', 'bad']}\n            onAddfeedback={addFeedback}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n        {countTotalFeedback() ? (\n          <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={countTotalFeedback()}\n              positivePercentage={countPositiveFeedbackPercentage()}\n            />\n            \n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </>\n    ); \n }\n","import ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__d_ke0\"};"],"sourceRoot":""}