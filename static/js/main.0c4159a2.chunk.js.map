{"version":3,"sources":["components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Notification/Notification.js","App.jsx","index.js","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["Section","title","children","FeedbackOptions","options","onAddfeedback","map","key","className","s","button","type","name","onClick","Statistics","good","neutral","bad","total","positivePercentage","Notification","message","App","state","addFeedback","e","target","setState","prevState","this","countTotalFeedback","Math","round","countPositiveFeedbackPercentage","Object","keys","Component","ReactDOM","render","document","querySelector","module","exports"],"mappings":"8PAeeA,EAZC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,qCACE,6BAAKD,IACL,8BAAMC,Q,gBCaGC,EAjBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,cAAZ,OACtB,6BACGD,EAAQE,KAAI,SAAAC,GAAG,OACd,6BACE,wBACEC,UAAWC,IAAEC,OACbC,KAAK,SACLC,KAAML,EACNM,QAASR,EAJX,SAMGE,KAPIA,SCiBAO,EApBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,gCACE,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,YCGSC,EAVM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OACE,mCACE,4BAAIA,OCAWC,E,4MACnBC,MAAQ,CACNR,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPO,YAAc,SAAAC,GACZ,IAAMb,EAAOa,EAAEC,OAAOd,KACtB,EAAKe,UAAS,SAAAC,GAAS,sBACpBhB,EAAOgB,EAAUhB,GAAQ,O,wDAI9B,WAAsB,IAAD,EACYiB,KAAKN,MAEpC,OAHmB,EACXR,KADW,EACLC,QADK,EACIC,M,6CAKzB,WACE,IAAMC,EAAQW,KAAKC,qBACXf,EAASc,KAAKN,MAAdR,KACR,OAAOgB,KAAKC,MAAOjB,EAAOG,EAAS,O,oBAGrC,WAAU,IAAD,EACwBW,KAAKN,MAA5BR,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBC,EAAQW,KAAKC,qBACbX,EAAqBU,KAAKI,kCAChC,OACE,qCACE,cAAC,EAAD,CAAShC,MAAM,2BAAf,SACE,cAAC,EAAD,CACEG,QAAS8B,OAAOC,KAAKN,KAAKN,OAC1BlB,cAAewB,KAAKL,gBAGxB,cAAC,EAAD,CAASvB,MAAM,aAAf,SACa,IAAViB,EACC,cAAC,EAAD,CAAcG,QAAQ,sBAEtB,cAAC,EAAD,CACEN,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,a,GA/CDiB,aCDjCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,cAAc,W,kBCJhDC,EAAOC,QAAU,CAAC,OAAS,mC","file":"static/js/main.0c4159a2.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Section = ({ title, children }) => {\n  return (\n    <>\n      <h2>{title}</h2>\n      <div>{children}</div>\n    </>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n};\nexport default Section;\n","import React from 'react';\nimport s from './FeedbackOptions.module.css';\n\nconst FeedbackOptions = ({ options, onAddfeedback }) => (\n  <ul>\n    {options.map(key => (\n      <li key={key}>\n        <button\n          className={s.button}\n          type=\"button\"\n          name={key}\n          onClick={onAddfeedback}\n        >\n          {key}\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n\nexport default FeedbackOptions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <div>\n      <p>Good: {good}</p>\n      <p>Neutral: {neutral}</p>\n      <p>Bad: {bad}</p>\n      <p>Total: {total}</p>\n      <p>Positive feedback: {positivePercentage} %</p>\n    </div>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => {\n  return (\n    <>\n      <p>{message}</p>\n    </>\n  );\n};\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\nexport default Notification;\n","import React, { Component } from 'react';\nimport Section from './components/Section/Section';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions.js';\nimport Statistics from './components/Statistics/Statistics';\nimport Notification from './components/Notification/Notification';\n\nexport default class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  addFeedback = e => {\n    const name = e.target.name;\n    this.setState(prevState => ({\n      [name]: prevState[name] + 1,\n    }));\n  };\n\n  countTotalFeedback() {\n    const { good, neutral, bad } = this.state;\n    const total = good + neutral + bad;\n    return total;\n  }\n\n  countPositiveFeedbackPercentage() {\n    const total = this.countTotalFeedback();\n    const { good } = this.state;\n    return Math.round((good / total) * 100);\n  }\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback();\n    const positivePercentage = this.countPositiveFeedbackPercentage();\n    return (\n      <>\n        <Section title=\"Gib ihm, Bratan, gib ihm\">\n          <FeedbackOptions\n            options={Object.keys(this.state)}\n            onAddfeedback={this.addFeedback}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {total === 0 ? (\n            <Notification message=\"No feedback given\" />\n          ) : (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={positivePercentage}\n            />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__d_ke0\"};"],"sourceRoot":""}